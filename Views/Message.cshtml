@using Orchard.Settings;
@using Lombiq.SmartNotifications.Models;
@using Orchard.ContentManagement;
@using Piedone.HelpfulLibraries.Utilities;
@using Lombiq.SmartNotifications.Services;
@using Lombiq.SmartNotifications;
@{
    Script.Require("jQuery").AtHead();
    Style.Include("lombiq-smartnotifications-style.css");
    var siteService = WorkContext.Resolve<ISiteService>();
    var notificationService = WorkContext.Resolve<INotificationManager>();
    var baseUrl = WorkContext.CurrentSite.BaseUrl;
    var settings = siteService.GetSiteSettings().As<SmartNotificationsPart>();
    var message = @Html.Raw(Html.Encode(Model.Message)).ToString();
    var Id = Model.Message.ToString().Substring(Model.Message.ToString().IndexOf('|')+1);
    var MakeAllNotificationsClosable = settings.MakeAllNotificationsClosable || message.Contains(Constants.Closable);
    var MakeAllNotificationsFading = settings.MakeAllNotificationsFading || message.Contains(Constants.Fading);
    var MakeAllNotificationsSticky = settings.MakeAllNotificationsSticky || message.Contains(Constants.Sticky);
    var HtmlMessage = Html.Raw(Html.Encode(Model.Message).Replace(Environment.NewLine, "<br />").Replace(Constants.Closable, "").Replace(Constants.Fading, ""));
}
@if (MakeAllNotificationsSticky)
{ 
    <div message-id="@Id" class="message message-@Model.Type">@HtmlMessage.ToString().Substring(0, Model.Message.ToString().IndexOf('|')) @if (MakeAllNotificationsClosable) {<span id='close-message'>&#10006;</span> }</div>
}
else
{
    <div message-id="@Id" class="message message-@Model.Type">@HtmlMessage @if (MakeAllNotificationsClosable) {<span id='close-message'>&#10006;</span> }</div>
}
@if (this.WasNotDisplayed("messageJS"))
{
    if (MakeAllNotificationsSticky)
    {
        <script type="text/javascript">
        (function ($) {
            $(function () {
                var uri = "@baseUrl" + '/api/Lombiq.SmartNotifications/Sticky';
                $(".message > span").click(function () {
                    if ($(this).parent().attr("message-id") != null) {
                        $.ajax({
                            url: uri + '/' + $(this).parent().attr("message-id"),
                            type: 'DELETE',
                            success: function (result) {
                                console.log(result);
                            }
                        });
                    }
                    $(this).parent().hide();
                });
                @if(settings.MakeAllNotificationsFading) {
                    <text>setTimeout(function () { $('.message').fadeOut(2000) }, 5000);</text>
                }
            });
        }
        )(jQuery);
        </script> 
    }
    else
    {
        <script type="text/javascript">
            (function ($) {
                $(function () {
                    $(".message > span").click(function () {
                        $(this).parent().hide();
                    });
                    @if (settings.MakeAllNotificationsFading) {
                        <text>setTimeout(function () { $('.message').fadeOut(2000) }, 5000);</text>
                    }});
            })(jQuery);
        </script> 
    }
}