@using Orchard.Settings;
@using Lombiq.SmartNotifications.Models;
@using Orchard.ContentManagement;
@using Piedone.HelpfulLibraries.Utilities;
@using Lombiq.SmartNotifications.Services;
@using Lombiq.SmartNotifications;

@{
    Script.Require("jQuery").AtFoot();
    Style.Include("lombiq-smartnotifications-style.css");

    var settings = WorkContext.Resolve<ISiteService>().GetSiteSettings().As<SmartNotificationsPart>();
    var stickyNotificationsApiUrl = Url.HttpRouteUrl("", new { httproute = true, area = "Lombiq.SmartNotifications", controller = "StickyNotification" });
    var message = (Orchard.Localization.LocalizedString)Model.Message;
    var messageText = message.Text;

    var notificationId = "";
    if (messageText.StartsWith(Constants.Sticky))
    {
        notificationId = messageText.Substring(Constants.Sticky.Length, (messageText.IndexOf("@") - Constants.Sticky.Length));
    }

    var isClosable = settings.MakeAllNotificationsClosable || messageText.StartsWith(Constants.Closable);
    var isFading = settings.MakeAllNotificationsFading || messageText.StartsWith(Constants.Fading);
    var isSticky = messageText.StartsWith(Constants.Sticky);
    var htmlMessage = Html.Raw(Html.Encode(message).Replace(Environment.NewLine, "<br />").Replace(Constants.Closable, "").Replace(Constants.Fading, ""));
}


@if (isSticky)
{
    <div data-id="@notificationId" class="message message-@Model.Type">@htmlMessage.ToString().Substring(messageText.IndexOf("@") + 1) <span class='close-message'>&#10006;</span></div>
}
else if (!settings.MakeAllNotificationsSticky)
{
    <div class="message message-@Model.Type">
        @htmlMessage
        @if (isClosable)
        {
            <span class='close-message'>&#10006;</span>
        }
    </div>
}

@if (isSticky && this.WasNotDisplayed("Lombiq.SmartNotifications.Sticky"))
{
    using (Script.Foot())
    {
        <script type="text/javascript">
            (function ($) {
                $(function () {
                    var uri = "@stickyNotificationsApiUrl" + "/";
                    $(".message > span.close-message").click(function () {
                        if ($(this).parent().attr("data-id") != null) {
                            $.ajax({
                                url: uri + $(this).parent().attr("data-id"),
                                type: 'DELETE',
                                success: function (result) {
                                    console.log(result);
                                }
                            });
                        }
                        $(this).parent().hide();
                    });
                });
            })(jQuery);
        </script>
    }
}

@if (isClosable && this.WasNotDisplayed("Lombiq.SmartNotifications.Closable"))
{
    using (Script.Foot())
    {
        <script type="text/javascript">
            (function ($) {
                $(function () {
                    $(".message > span.close-message").click(function () {
                        $(this).parent().hide();
                    });
                });
            })(jQuery);
        </script>
    }
}

@if (isFading && this.WasNotDisplayed("Lombiq.SmartNotifications.Fading"))
{
    using (Script.Foot())
    {
        <script type="text/javascript">
            (function ($) {
                $(function () {
                    setTimeout(function () { $('.message').fadeOut(2000) }, @settings.FadingStartTimeMilliseconds);
                });
            })(jQuery);
        </script>
    }
}