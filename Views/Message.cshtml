@using Orchard.Settings;
@using Lombiq.SmartNotifications.Models;
@using Orchard.ContentManagement;
@using Piedone.HelpfulLibraries.Utilities;
@using Lombiq.SmartNotifications.Services;
@using Lombiq.SmartNotifications;
@{
    Script.Require("jQuery").AtFoot();
    Style.Include("lombiq-smartnotifications-style.css");
    var siteService = WorkContext.Resolve<ISiteService>();
    var notificationService = WorkContext.Resolve<INotificationManager>();
    var baseUrl = WorkContext.CurrentSite.BaseUrl;
    var settings = siteService.GetSiteSettings().As<SmartNotificationsPart>();
    var notification_id = Model.Message.ToString().Substring(Model.Message.ToString().IndexOf('|') + 1);
    var url = Url.HttpRouteUrl("", new { httproute = true, area = "Lombiq.SmartNotifications", controller = "StickyNotification" });
    var message = @Html.Raw(Html.Encode(Model.Message)).ToString();
    var makeAllNotificationsClosable = settings.MakeAllNotificationsClosable || message.Contains(Constants.Closable);
    var makeAllNotificationsFading = settings.MakeAllNotificationsFading || message.Contains(Constants.Fading);
    var makeAllNotificationsSticky = settings.MakeAllNotificationsSticky || message.Contains(Constants.Sticky);
    var htmlMessage = Html.Raw(Html.Encode(Model.Message).Replace(Environment.NewLine, "<br />").Replace(Constants.Closable, "").Replace(Constants.Fading, ""));
}
@if (makeAllNotificationsSticky && message.Contains("|"))
{
    <div data-id="@notification_id" class="message message-@Model.Type">@htmlMessage.ToString().Substring(0, Model.Message.ToString().IndexOf('|')) @if (makeAllNotificationsClosable) {<span id='close-message'>&#10006;</span> }</div>
}
else
{
    <div data-id="@notification_id" class="message message-@Model.Type">@htmlMessage @if (makeAllNotificationsClosable){<span id='close-message'>&#10006;</span> }</div>
}
@if (this.WasNotDisplayed("messageJS"))
{
    using (Script.Foot())
    {
        if (makeAllNotificationsSticky)
        {
            <script type="text/javascript">
                (function ($) {
                    $(function () {
                        var uri = "@url"+"/";
                        $(".message > span#close-message").click(function () {
                            if ($(this).parent().attr("data-id") != null) {
                                $.ajax({
                                    url: uri + $(this).parent().attr("data-id"),
                                    type: 'DELETE',
                                    success: function (result) {
                                        console.log(result);
                                    }
                                });
                            }
                            $(this).parent().hide();
                        });
                        @if(settings.MakeAllNotificationsFading) {
                        <text>setTimeout(function () { $('.message').fadeOut(2000) }, 5000);</text>
                    }
                    });
                }
                )(jQuery);
            </script>
        }
        else
        {
            <script type="text/javascript">
                (function ($) {
                    $(function () {
                        $(".message > span#close-message").click(function () {
                            $(this).parent().hide();
                        });
                        @if (settings.MakeAllNotificationsFading) {
                            <text>setTimeout(function () { $('.message').fadeOut(2000) }, 5000);</text>
                        }
                    });
                })(jQuery);
            </script>
        }
    }
}